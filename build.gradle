buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.3.8.RELEASE")
    }
}

wrapper {
    gradleVersion = '5.6.4'
    distributionType = Wrapper.DistributionType.BIN
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    group = "io.talken"
    version = "1.6.0"

    bootJar {
        baseName = "tkn-" + project.name
    }

    jar {
        baseName = "tkn-" + project.name
        manifest.attributes provider: 'gradle'
    }

    springBoot {
        buildInfo()
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://jitpack.io" }
        maven { url "https://dl.bintray.com/ethereum/maven/" }
        maven {
            credentials {
                username talkenRepositoryUser
                password talkenRepositoryPass
            }
            url talkenRepositoryUrl
        }
        mavenLocal()
    }

    configurations {
        compile.exclude module: "spring-boot-starter-tomcat"
        all {
            resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        }
    }

    dependencies {
        implementation('io.talken:java-common:20200405-1') { changing = true }

        // jooq
//        compile('org.jooq:jooq:3.14.1')

        annotationProcessor('org.projectlombok:lombok:1.18.16')
        compileOnly('org.projectlombok:lombok:1.18.16')

        // Spring Data
        implementation('org.springframework.boot:spring-boot-starter-jdbc')
        implementation('org.springframework.boot:spring-boot-starter-aop')

        // configuration processor
        implementation('org.springframework.boot:spring-boot-configuration-processor')

        // Spring validation
        implementation('org.springframework.boot:spring-boot-starter-validation')

        // Spring cache
        implementation('org.springframework.boot:spring-boot-starter-cache')

        // Redis
        implementation('org.springframework.boot:spring-boot-starter-data-redis')

        // MongoDB
        implementation('org.springframework.boot:spring-boot-starter-data-mongodb')

        implementation("com.squareup.okhttp3:okhttp:4.9.0")
        implementation("com.squareup.okhttp3:logging-interceptor:4.9.0")

        // stellar sdk
        implementation('com.github.stellar:java-stellar-sdk:0.22.1')

        // ethereum web3j sdk
        implementation('org.web3j:core:4.8.2')
        implementation('org.web3j:contracts:4.8.2')

        // filecoin
        implementation('com.github.arteam:simple-json-rpc-client:1.2')
        implementation('com.github.briandilley.jsonrpc4j:jsonrpc4j:1.4.6')
        implementation('org.apache.httpcomponents:httpclient:4.5.13')
        implementation('co.nstant.in:cbor:0.9')
        implementation('org.bitcoinj:bitcoinj-core:0.15.9')
        implementation('com.github.apetersson:Blake2b:0.1')

        // klaytn
        implementation 'com.klaytn.caver:core:1.5.7'
        implementation 'xyz.groundx.caver:caver-java-ext-kas:1.1.0'

        // devtools
        runtimeOnly('org.springframework.boot:spring-boot-devtools')

        testImplementation('org.springframework.boot:spring-boot-starter-test')
        testImplementation('junit:junit:4.13')
    }
}

project(':dex-api') {
    dependencies {
        implementation project(":dex-shared")
    }
}

project(':dex-gov') {
    dependencies {
        implementation project(":dex-shared")
    }
}