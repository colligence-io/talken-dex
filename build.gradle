buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.4.RELEASE")
    }
}

wrapper {
    gradleVersion = '5.6.4'
    distributionType = Wrapper.DistributionType.BIN
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    group = "io.talken"
    version = "1.5.3"

    bootJar {
        baseName = "talken-" + project.name
    }

    jar {
        baseName = "talken-" + project.name
        manifest.attributes provider: 'gradle'
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://jitpack.io" }
        maven { url "https://dl.bintray.com/ethereum/maven/" }
        maven {
            credentials {
                username talkenRepositoryUser
                password talkenRepositoryPass
            }
            url talkenRepositoryUrl
        }
        mavenLocal()
    }

    configurations {
        compile.exclude module: "spring-boot-starter-tomcat"
        all {
            resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        }
    }

    dependencies {
        compile('io.talken:java-common:20200527-3') { changing = true }

        annotationProcessor('org.projectlombok:lombok:1.18.8')
        compileOnly('org.projectlombok:lombok:1.18.8')

        // Spring Data
        compile('org.springframework.boot:spring-boot-starter-jdbc')
        compile('org.springframework.boot:spring-boot-starter-aop')

        // configuration processor
        compile('org.springframework.boot:spring-boot-configuration-processor')

        // Spring cache
        compile('org.springframework.boot:spring-boot-starter-cache')

        // Redis
        compile('org.springframework.boot:spring-boot-starter-data-redis')

        // MongoDB
        compile('org.springframework.boot:spring-boot-starter-data-mongodb')

        // stellar sdk
        compile('com.github.stellar:java-stellar-sdk:0.16.0')

        // ethereum web3j sdk
        compile('org.web3j:core:4.5.10')
        compile('org.web3j:contracts:4.5.10')

        // devtools
        runtime('org.springframework.boot:spring-boot-devtools')

        testCompile('org.springframework.boot:spring-boot-starter-test')
        testCompile('junit:junit:4.12')
    }
}

project(':dex-api') {
    dependencies {
        compile project(":dex-shared")
    }
}

project(':dex-gov') {
    dependencies {
        compile project(":dex-shared")
    }
}